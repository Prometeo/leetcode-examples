Given an array /nums/ containing /n/ distinct numbers in the range /[0, n]/, return the only number in the range that is missing from the array

*** Example 1:
*Input*: nums =[3,0,1]
*Output*: 2
*Explanation*: n = 3 since there are 3 numbers, so all numbers are in the range [0,3]. 2 is the missing number in the range since it does not appear in nums.

*** Example 2:
*Input*: nums = [0,1]
*Output*: 2
*Explanation*: n = 2 since there are 2 numbers, so all numbers are in the range[0,2]. 2 is the missing number in the range since it does not appear in nums.

*** Example 3:
*Input*: nums = [9,6,4,2,3,5,7,0,1]
*Output*: 8
*Explanation*: n = 9 since there are 9 numbers, so all numbers are in the range [0,9]. 8 is the missing number in the range since it does not appear in nums.

*** Constraints:
+ n == nums.length
+ 1 <= n <= 10^4


** Aproaches

*** Sorting and compare
Sort the list and then iterate the sorted list and compare the values with the index of the iterator.

*** Use the range method in python and use it to calculate the missing number
create a range of numbers from the len of the list then sum all the elements, substract the sum of the elements of the list to the result of the sum of the range to get the missing number.
